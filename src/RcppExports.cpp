// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// hungarian_cost_cpp
double hungarian_cost_cpp(NumericMatrix matrix);
RcppExport SEXP _StudentProjectAllocation_hungarian_cost_cpp(SEXP matrixSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type matrix(matrixSEXP);
    rcpp_result_gen = Rcpp::wrap(hungarian_cost_cpp(matrix));
    return rcpp_result_gen;
END_RCPP
}
// hungarian_assignment_cpp
IntegerVector hungarian_assignment_cpp(NumericMatrix cost);
RcppExport SEXP _StudentProjectAllocation_hungarian_assignment_cpp(SEXP costSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type cost(costSEXP);
    rcpp_result_gen = Rcpp::wrap(hungarian_assignment_cpp(cost));
    return rcpp_result_gen;
END_RCPP
}
// genetic_algorithm_cpp
List genetic_algorithm_cpp(SEXP costMatrix, int popSize, int generations, double mutationRate);
RcppExport SEXP _StudentProjectAllocation_genetic_algorithm_cpp(SEXP costMatrixSEXP, SEXP popSizeSEXP, SEXP generationsSEXP, SEXP mutationRateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type costMatrix(costMatrixSEXP);
    Rcpp::traits::input_parameter< int >::type popSize(popSizeSEXP);
    Rcpp::traits::input_parameter< int >::type generations(generationsSEXP);
    Rcpp::traits::input_parameter< double >::type mutationRate(mutationRateSEXP);
    rcpp_result_gen = Rcpp::wrap(genetic_algorithm_cpp(costMatrix, popSize, generations, mutationRate));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_StudentProjectAllocation_hungarian_cost_cpp", (DL_FUNC) &_StudentProjectAllocation_hungarian_cost_cpp, 1},
    {"_StudentProjectAllocation_hungarian_assignment_cpp", (DL_FUNC) &_StudentProjectAllocation_hungarian_assignment_cpp, 1},
    {"_StudentProjectAllocation_genetic_algorithm_cpp", (DL_FUNC) &_StudentProjectAllocation_genetic_algorithm_cpp, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_StudentProjectAllocation(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
